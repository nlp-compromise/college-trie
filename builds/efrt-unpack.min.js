/* efrt trie-compression v0.0.5  github.com/nlp-compromise/efrt  - MIT */
!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var t;t="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,t.unpack=e()}}(function(){return function e(t,n,r){function o(s,f){if(!n[s]){if(!t[s]){var u="function"==typeof require&&require;if(!f&&u)return u(s,!0);if(i)return i(s,!0);var c=new Error("Cannot find module '"+s+"'");throw c.code="MODULE_NOT_FOUND",c}var a=n[s]={exports:{}};t[s][0].call(a.exports,function(e){var n=t[s][1][e];return o(n?n:e)},a,a.exports,e,t,n,r)}return n[s].exports}for(var i="function"==typeof require&&require,s=0;s<r.length;s++)o(r[s]);return o}({1:[function(e,t,n){"use strict";var r=36,o="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ",i=o.split("").reduce(function(e,t,n){return e[t]=n,e},{}),s=function(e){if(void 0!==o[e])return o[e];for(var t=1,n=r,i="";e>=n;e-=n,t++,n*=r);for(;t--;){var s=e%r;i=String.fromCharCode((s<10?48:55)+s)+i,e=(e-s)/r}return i},f=function(e){if(void 0!==i[e])return i[e];for(var t=0,n=1,o=r,s=1;n<e.length;t+=o,n++,o*=r);for(var f=e.length-1;f>=0;f--,s*=r){var u=e.charCodeAt(f)-48;u>10&&(u-=7),t+=u*s}return t};t.exports={toAlphaCode:s,fromAlphaCode:f}},{}],2:[function(e,t,n){"use strict";var r=e("./ptrie");t.exports=function(e){return new r(e)}},{"./ptrie":5}],3:[function(e,t,n){"use strict";var r=e("../encoding"),o=e("./prefix"),i=e("./unravel"),s={has:function(e){if(!e)return!1;if(this._cache)return this._cache[e]||!1;var t=this,n=function n(r,i){var s=t.nodes[r];if("!"===s[0]){if(i===e)return!0;s=s.slice(1)}for(var f=s.split(/([A-Z0-9,]+)/g),u=0;u<f.length;u+=2){var c=f[u],a=f[u+1];if(c){var d=i+c;if(","!==a&&void 0!==a){if(o(d,e))return r=t.indexFromRef(a,r),n(r,d)}else if(d===e)return!0}}return!1};return n(0,"")},indexFromRef:function(e,t){var n=r.fromAlphaCode(e);return n<this.symCount?this.syms[n]:t+n+1-this.symCount},toArray:function(){return Object.keys(this.toObject())},toObject:function(){return this._cache?this._cache:i(this)},cache:function(){this._cache=i(this),this.nodes=null,this.syms=null}};t.exports=s},{"../encoding":1,"./prefix":4,"./unravel":7}],4:[function(e,t,n){"use strict";t.exports=function(e,t){if(e===t)return!0;var n=e.length;return!(n>=t.length)&&(1===n?e===t[0]:t.slice(0,n)===e)}},{}],5:[function(e,t,n){"use strict";var r=e("./symbols"),o=e("./methods"),i=function(e){this.nodes=e.split(";"),this.syms=[],this.symCount=0,this._cache=null,e.match(":")&&r(this)};Object.keys(o).forEach(function(e){i.prototype[e]=o[e]}),t.exports=i},{"./methods":3,"./symbols":6}],6:[function(e,t,n){"use strict";var r=e("../encoding");t.exports=function(e){for(var t=new RegExp("([0-9A-Z]+):([0-9A-Z]+)"),n=0;n<e.nodes.length;n++){var o=t.exec(e.nodes[n]);if(!o){e.symCount=n;break}e.syms[r.fromAlphaCode(o[1])]=r.fromAlphaCode(o[2])}e.nodes=e.nodes.slice(e.symCount,e.nodes.length)}},{"../encoding":1}],7:[function(e,t,n){"use strict";t.exports=function(e){var t={},n=function n(r,o){var i=e.nodes[r];"!"===i[0]&&(t[o]=!0,i=i.slice(1));for(var s=i.split(/([A-Z0-9,]+)/g),f=0;f<s.length;f+=2){var u=s[f],c=s[f+1];if(u){var a=o+u;if(","!==c&&void 0!==c){var d=e.indexFromRef(c,r);n(d,a)}else t[a]=!0}}};return n(0,""),t}},{}]},{},[2])(2)});
